/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventana;

import controlador.ControladorPrincipal;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import modelo.Caseta;

/**
 *
 * @author Juan Esteban
 */
public class VentanaCaseta extends javax.swing.JFrame implements ActionListener {

    private JButton[][] botones;
    private ControladorPrincipal controlador;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaCaseta(ControladorPrincipal controller) {
        initComponents();
        setLocationRelativeTo(this);
        this.controlador = controller == null ? new ControladorPrincipal() : controller;
        botones = new JButton[4][5];
        dibujarBotones();
    }

    private void dibujarBotones() {
        int ancho = 60;
        int alto = 50;
        int separado = 20;
        int contador = 1;
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                botones[i][j] = new JButton();
                botones[i][j].addActionListener(this);
                switch (contador) {
                    case 1, 2, 3, 4, 5 -> {
                        botones[i][j].setBounds(
                                (j * ancho + 50),
                                (i * alto + separado),
                                ancho, alto);
                        panelBotones.add(botones[i][j]);

                    }

                    case 6, 10 -> {
                        botones[i][j].setBounds(
                                (j * ancho + 50),
                                (i * alto + separado),
                                ancho, alto);
                        panelBotones.add(botones[i][j]);
                    }
                    case 11, 12 -> {
                        botones[i][j].setBounds(
                                (j * ancho + 50),
                                (i * alto + separado),
                                ancho, alto);
                        panelBotones.add(botones[i][j]);
                    }

                    case 19, 20 -> {
                        botones[i][j].setBounds(
                                (j * ancho + 50),
                                (i * alto + separado),
                                ancho, alto);
                        panelBotones.add(botones[i][j]);

                    }

                }

                contador++;
            }
        }
        pintarBotones();
    }

    private void pintarBotones() {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                Caseta caseta = controlador.obtenerCaseta(i, j);
                if (caseta != null) {
                    if (caseta.getEmpresa().getNit() != null && caseta.getEmpresa().getAdminFlota() != null) {
                        botones[i][j].setBackground(Color.GREEN);
                    } else if (caseta.getEmpresa().getAdminFlota() != null || caseta.getEmpresa().getNit() != null) {
                        botones[i][j].setBackground(Color.BLUE);
                    } else {
                        botones[i][j].setBackground(Color.WHITE);
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBotones = new javax.swing.JPanel();
        btnCerrarSesion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelBotones.setBorder(javax.swing.BorderFactory.createTitledBorder("Casetas"));
        panelBotones.setToolTipText("");

        btnCerrarSesion.setText("Cerrar Sesion");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotonesLayout.createSequentialGroup()
                .addContainerGap(600, Short.MAX_VALUE)
                .addComponent(btnCerrarSesion)
                .addContainerGap())
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotonesLayout.createSequentialGroup()
                .addContainerGap(409, Short.MAX_VALUE)
                .addComponent(btnCerrarSesion)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        VentanaLogin login = new VentanaLogin();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCerrarSesionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JPanel panelBotones;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                if (e.getSource().equals(botones[i][j])) {
                    Caseta caseta = controlador.obtenerCaseta(i, j);
                    if (caseta != null) {
                        new VentanaGestionEmpresa(controlador, caseta).setVisible(
                                true);
                        this.dispose();
                    }
                }
            }
        }
    }
}
